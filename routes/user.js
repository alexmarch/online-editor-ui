// Generated by CoffeeScript 1.7.1
(function() {
  var Q, crypto, db, deffered, global, has_secure_password;

  db = require('../config/db');

  crypto = require('crypto');

  Q = require('q');

  deffered = Q.defer();

  global = require('../config/global');

  has_secure_password = function(pwd, salt) {
    if (salt == null) {
      salt = crypto.randomBytes(128).toString("base64");
    }
    if (pwd) {
      crypto.pbkdf2(pwd, salt, 2000, 256, function(err, hash_pwd) {
        return deffered.resolve(hash_pwd);
      });
    } else {
      deffered.reject(new Error("Password error !"));
    }
    return deffered.promise;
  };

  exports.user = {
    create: function(req, res) {
      return has_secure_password(req.body.password, null).then(function(pwd) {
        return db.q("SELECT * FROM users").then(function(user) {
          return console.log("Result", user);
        }, function(error) {
          flash.errors["password"] = error;
          return console.log(flash.errors);
        });
      }, function(error) {
        console.log("Errors:", global.flash);
        global.flash.errors.password = error;
        console.log("Errors:", global.flash);
      });
    }
  };

}).call(this);

//# sourceMappingURL=user.map
