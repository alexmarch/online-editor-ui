// Generated by CoffeeScript 1.7.1
(function() {
  var Q, crypto, db, user_crypto;

  crypto = require('crypto');

  db = require('./config/db');

  Q = require('q');

  user_crypto = {
    has_secure_password: function(pwd, salt) {
      var deffered;
      if (salt == null) {
        salt = crypto.randomBytes(128).toString("base64");
      }
      deffered = Q.defer();
      if (pwd) {
        crypto.pbkdf2(pwd, salt, 2000, 128, function(err, hash_pwd) {
          var key;
          key = new Buffer(hash_pwd).toString('hex');
          deffered.resolve({
            hash_key: key
          });
        });
      } else {
        deffered.reject(new Error("Password error !"));
      }
      return deffered.promise;
    },
    unique_email: function(email) {
      var deffered;
      deffered = Q.defer();
      db.q("select * from users where email like ?", [email]).then(function(user) {
        if (user && user.length > 0) {
          return deffered.resolve(false);
        } else {
          return deffered.resolve("YES", function(err) {
            return deffered.reject(new Error(err));
          });
        }
      });
      return deffered.promise;
    },
    check_email: function(email, email_confirm) {
      var re;
      if (email_confirm == null) {
        email_confirm = email;
      }
      re = /^\w+@{1}\w+\.[a-z]{2,3}$/;
      console.log(email, email_confirm);
      if (email === email_confirm && re.test(email)) {
        return true;
      }
      return false;
    }
  };

  module.exports = user_crypto;

}).call(this);

//# sourceMappingURL=user_crypto.map
